// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// generator and datasource configurations remain the same

// MODELS OR DB TABLES
enum Role {
  RECRUITER
  JOB_APPLICANT
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  role       Role
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  
  // Relationships
  company    Company?  // A user with role "recruiter" can own one company
  applications JobApplication[] // A user with role "job_applicant" can apply to many jobs
}

model Company {
  id         Int       @id @default(autoincrement())
  name       String
  ownerId    Int       @unique
  owner      User      @relation(fields: [ownerId], references: [id])
  
  // Relationships
  jobs       Job[]
}

model Job {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  skills      String[]
  companyId   Int
  company     Company   @relation(fields: [companyId], references: [id])
  
  // Relationships
  applications JobApplication[]
}

model JobApplication {
  id         Int       @id @default(autoincrement())
  jobId      Int
  applicantId Int
  status     ApplicationStatus @default(PENDING) // PENDING, ACCEPTED, REJECTED
  createdAt  DateTime  @default(now())
  
  // Relationships
  job        Job       @relation(fields: [jobId], references: [id])
  applicant  User      @relation(fields: [applicantId], references: [id])
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}